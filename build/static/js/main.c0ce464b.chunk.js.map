{"version":3,"sources":["Generator/Gen.tsx","assets/open.png","assets/key.png","assets/name.png","assets/bin.png","Vault/Vault.tsx","SecureVault/Secure.tsx","NewEntry/New.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Generator","history","useHistory","useState","password","setPassword","isAlpha","setIfAlpha","isSpec","setIfSpec","len","setLen","error","setError","copied","setCopied","setL","value","className","alt","src","onClick","replace","navigator","clipboard","writeText","height","width","type","style","padding","marginLeft","checked","onChange","state","a","res","list","undefined","i","n","Math","random","length","push","join","gen","Vault","psw","setPsw","srch","setSrch","toClipboard","string","alert","useEffect","p","localStorage","getItem","JSON","parse","color","placeholder","onKeyDown","e","code","filter","word","name","includes","target","textAlign","map","item","index","Open","flex","username","User","Key","Bin","splice","setItem","stringify","removeItem","Secure","input","setInput","isPswSet","setIfPswSet","msg","setMsg","verify","bcrypt","err","result","console","log","hash","require","config","New","setName","setUsername","save","o","backgroundColor","float","marginRight","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0ce464b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport './Gen.css';\n\nconst ns = '0123456789,;:=?./+ù%^$*][}{)(-_';\nconst n = '0123456789';\nconst na = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst nas = 'abcdefghijklmnopqrstuvwxyz0123456789,;:=?./+ù%^$*][}{)(-_ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst ftoi = (a: number) => {\n  return a | 0\n}\n\nconst Generator = () => {\n  const history = useHistory();\n  const [password, setPassword] = useState('Your password !');\n  const [isAlpha, setIfAlpha] = useState(true);\n  const [isSpec, setIfSpec] = useState(true);\n  const [len, setLen] = useState(12);\n  const [error, setError] = useState('');\n  const [copied, setCopied] = useState('');\n\n  const gen = () => {\n    let res = [];\n    let list = undefined;\n\n    if (isAlpha)\n      list = (isSpec ? nas : na)\n    else\n      list = (isSpec ? ns : n)\n\n    for (let i = 0; i < len; ++i) {\n      let n = ftoi(Math.random() * (list.length - 1))\n      res.push(list[n]);\n    }\n    setError('')\n    setCopied('')\n    return setPassword(res.join(''));\n  }\n\n  const setL = (value: number) => {\n    if (value < 8)\n      return setError('Length cannot be under 8 !')\n    else if (value > 30)\n      return setError('Length can be up to 30 !')\n    setError('')\n    return setLen(value);\n  }\n\n  const toClip = () => {\n    if (password === 'Your password !')\n      return setError('Generate a password before copying it !')\n    navigator.clipboard.writeText(password)\n    setCopied('Password copied in your clipboard !')\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <img\n          className=\"nav active\"\n          alt=\"Password generator\"\n          src=\"https://img.icons8.com/ios/50/000000/password--v1.png\"\n        />\n        <p className=\"title\">Password generator</p>\n        <img\n          className=\"nav\"\n          alt=\"Your vault\"\n          src=\"https://img.icons8.com/pastel-glyph/50/000000/safe--v2.png\"\n          onClick={() => history.replace('/securevault')}\n        />\n      </div>\n      <div className=\"pswDiv\">\n        <p\n          className=\"rowDiv psw\"\n        >{password}</p>\n        <img\n          className=\"rowDiv img\"\n          alt=\"Copy\"\n          src=\"https://img.icons8.com/material-outlined/48/000000/copy.png\"\n          onClick={toClip}\n          height={20}\n          width={20}\n        />\n      </div>\n      <p className=\"errorMsg\">{error}</p>\n      <p\n        className=\"errorMsg copied\"\n      >{copied}</p>\n      <div>\n        <p\n          className=\"rowDiv psw\"\n        > Length : </p>\n        <input\n          type=\"button\"\n          onClick={() => setL(len - 1)}\n          value='-'\n          className=\"button rowDiv size30\"\n          style={{ padding: '10px 15px', marginLeft: 5 }}\n        />\n        <p\n          className=\"rowDiv size30 textCol\"\n        > {len} </p>\n        <input\n          type=\"button\"\n          onClick={() => setL(len + 1)}\n          value='+'\n          className=\"button rowDiv size30\"\n          style={{ padding: '10px 15px' }}\n        />\n      </div>\n      <div>\n        <div className='optionDiv'>\n          <p className=\"rowDiv check\"> Include Letters </p>\n          <input\n            type=\"checkbox\"\n            checked={isAlpha}\n            onChange={(state) => setIfAlpha(a => !a)}\n            className=\"rowDiv checkboxes\"\n          />\n        </div>\n        <div className='optionDiv'>\n          <p className=\"rowDiv check\"> Include special characters </p>\n          <input\n            type=\"checkbox\"\n            checked={isSpec}\n            onChange={(state) => setIfSpec(a => !a)}\n            className=\"rowDiv checkboxes\"\n          />\n        </div>\n      </div>\n      <input\n        type=\"button\"\n        value=\"Generate\"\n        onClick={() => gen()}\n        className=\"button genBtn\"\n      />\n    </div>\n  );\n};\n\nexport default Generator;","export default __webpack_public_path__ + \"static/media/open.b600438f.png\";","export default __webpack_public_path__ + \"static/media/key.33ec8de4.png\";","export default __webpack_public_path__ + \"static/media/name.be34476f.png\";","export default __webpack_public_path__ + \"static/media/bin.608a869c.png\";","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Vault.css';\n\n//? Images\nimport Open from '../assets/open.png';\nimport Key from '../assets/key.png';\nimport User from '../assets/name.png';\nimport Bin from '../assets/bin.png';\n\n//todo TO DO :\n//todo sync on GDrive\n//todo Timer to lock the vault\n\nconst Vault = () => {\n  const history = useHistory();\n  const [psw, setPsw] = useState(undefined) as any;\n  const [srch, setSrch] = useState('');\n\n  const filter = () => {\n    let p = localStorage.getItem('pass') as any;\n\n    if (srch === '')\n      return setPsw(JSON.parse(p));\n    return setPsw(psw.filter((word: any) => word.name.includes(srch)))\n  }\n\n  const removeItem = (item: any, index: number) => {\n    const p = [...psw];\n    p.splice(index, 1);\n    localStorage.setItem('pass', JSON.stringify(p));\n    return setPsw(p);\n  }\n\n  const toClipboard = (string: string) => {\n    navigator.clipboard.writeText(string)\n    return alert('\\'' + string + '\\' copied to your clipboard !');\n  }\n\n  useEffect(() => {\n    let p = localStorage.getItem('pass') as any;\n    p = JSON.parse(p);\n\n    if (p !== undefined && p !== null)\n      setPsw(p);\n  }, [])\n\n  return (\n    <>\n      {/* Navigation bar */}\n      <div className=\"navbar\">\n        <img\n          className=\"nav\"\n          alt=\"Password generator\"\n          src=\"https://img.icons8.com/ios/50/000000/password--v1.png\"\n          onClick={() => history.replace('/')}\n        />\n        <p\n          className=\"title\"\n          style={{ color: '#d4eee6'}}\n        >Your vault</p>\n        <img\n          className=\"nav active\"\n          alt=\"Your vault\"\n          src=\"https://img.icons8.com/pastel-glyph/50/000000/safe--v2.png\"\n        />\n      </div>\n\n      {/* Navigation bar 2 */}\n      <div className='nav2'>\n        <img\n          src=\"https://img.icons8.com/dotty/50/000000/lock-2.png\"\n          alt='Lock your vault'\n          className='nav2btn'\n          height='50vh'\n          onClick={() => history.replace('/securevault')}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Research\"\n          onKeyDown={(e) => {\n            if (e.code === 'Enter')\n              filter()\n          }}\n          onChange={(e) => setSrch(e.target.value)}\n          className='inputv'\n        />\n        <img\n          src=\"https://img.icons8.com/fluency-systems-filled/48/000000/plus-math.png\"\n          alt='add an entry'\n          className='nav2btn'\n          height='50vh'\n          onClick={() => history.replace('/new')}\n        />\n      </div>\n\n      {/* Password list */}\n      <div style={(psw === undefined) ? { textAlign: 'center' } : {}} className=\"mainv\">\n        {psw === undefined ? (\n          <>\n          <p className=\"emptyText\">Nothing to see here</p>\n          <p style={{ color: '#fff' }}>Click '+' to add a new entry</p>\n          </>\n        ) : psw.map((item: any, index: number) => {\n          return (\n            <div className=\"eachPsw\" key={'ep_' + index}>\n              <img\n                src={Open}\n                width='40'\n                height='40'\n                className='openImg animatedButton'\n              />\n              <div style={{ flex: 1 }}>\n                <p className='pswTextName'>{item.name}</p>\n                <p className='pswTextP'>{item.username}</p>\n              </div>\n              <img\n                style={{ padding: 10 }}\n                className='animatedButton'\n                height='40'\n                width='40'\n                src={User}\n                onClick={() => toClipboard(item.username)}\n              />\n              <img\n                style={{ padding: 10 }}\n                className='animatedButton'\n                height='40'\n                width='40'\n                src={Key}\n                onClick={() => toClipboard(item.password)}\n              />\n              <img\n                style={{ padding: 10 }}\n                className='animatedButton'\n                height='40'\n                width='40'\n                src={Bin}\n                onClick={() => removeItem(item, index)}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Vault;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport * as bcrypt from 'bcryptjs';\nimport './Secure.css';\n\nconst Secure = () => {\n  const [input, setInput] = useState('');\n  const [isPswSet, setIfPswSet] = useState(false);\n  const [msg, setMsg] = useState('');\n  const history = useHistory();\n\n  const verify = () => {\n    let p = localStorage.getItem('password') as string;\n\n    if (!isPswSet) {\n      bcrypt.hash(input, 0, (err: any, hash: string) => {\n        if (err) {\n          alert(err);\n          return setMsg('Error setting your password');\n        }\n        return localStorage.setItem('password', hash);\n      });\n    } else {\n      bcrypt.compare(input, p, (err: any, result: boolean) => {\n        if (err) {\n          console.log(err);\n          return setMsg('Server error')\n        } else if (result)\n          history.replace('/vault');\n        else\n          setMsg('Wrong password !');\n      });\n    }\n  };\n\n  useEffect(() => {\n    require('dotenv').config()\n    let p = localStorage.getItem('password');\n\n    if (p === undefined || p === null) {\n      setIfPswSet(false);\n      return setMsg('Please set your Master Password !');\n    }\n    // localStorage.clear();\n    return setIfPswSet(true);\n  }, [])\n\n  return (\n    <>\n      <div className=\"navbar\">\n        <img\n          className=\"nav\"\n          alt=\"Password generator\"\n          src=\"https://img.icons8.com/ios/50/000000/password--v1.png\"\n          onClick={() => history.replace('/')}\n        />\n        <p className=\"title\">Your vault</p>\n        <img\n          className=\"nav active\"\n          alt=\"Your vault\"\n          src=\"https://img.icons8.com/pastel-glyph/50/000000/safe--v2.png\"\n        />\n      </div>\n      <div className=\"form\">\n        <input\n          className=\"input\"\n          type=\"password\"\n          placeholder=\"Master password\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.code === 'Enter')\n              return verify()\n          }}\n        />\n        <p className=\"error\">{msg}</p>\n        <input type='button' onClick={verify} value='Submit' className=\"button\"/>\n      </div>\n    </>\n  );\n};\n\nexport default Secure;","import React, { useState } from 'react'\nimport { useHistory } from 'react-router';\nimport './New.css';\n\nconst New = () => {\n  const history = useHistory()\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const save = () => {\n    let p = localStorage.getItem('pass') as any;\n    p = JSON.parse(p);\n    let o = {\n      name: name,\n      username: username,\n      password: password\n    };\n    console.log(p);\n    if (p !== null) {\n      p.push(o);\n      localStorage.setItem('pass', JSON.stringify(p));\n    } else\n      localStorage.setItem('pass', JSON.stringify([o]));\n    return history.replace('/vault');\n  }\n\n  return (\n    <div style={{ backgroundColor: '#212121', height: '100vh' }}>\n      {/* Navigation bar */}\n      <div className='navbar'>\n        <img\n          className='nav'\n          height='40'\n          width='40'\n          alt='Go back'\n          src=\"https://img.icons8.com/ios-filled/50/000000/back.png\"\n          onClick={() => history.replace('/vault')}\n        />\n        <p className='title'>Create new</p>\n        <img\n          className='nav'\n          height='40'\n          width='40'\n          alt='Save'\n          src=\"https://img.icons8.com/ios-glyphs/30/000000/save--v1.png\"\n          onClick={() => save()}\n        />\n      </div>\n\n      {/* Form */}\n      <div className='mainn'>\n        <p className='titlen'>New password</p>\n        <input\n          type='text'\n          placeholder='Name'\n          className='inputn'\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type='text'\n          placeholder='Username or email adress'\n          className='inputn'\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          type='text'\n          placeholder='Password'\n          className='inputn'\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          type='button'\n          style={{ float: 'right', marginRight: '30px' }}\n          className='button'\n          onClick={save}\n          value='Save'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default New;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Generator from './Generator/Gen';\nimport Vault from './Vault/Vault';\nimport Secure from './SecureVault/Secure';\nimport New from './NewEntry/New';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Generator}/>\n      <Route exact path=\"/securevault\" component={Secure}/>\n      <Route exact path=\"/vault\" component={Vault}/>\n      <Route exact path=\"/new\" component={New}/>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}